{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "Global resources for a UDP Gateway based DNS filtering service with analytics. Deploying this template requires a subscription to UDP Gateway in AWS Marketplace.",
  "Parameters": {
    "ClientCidrToAllow": {
      "Description": "The CIDR describine which IP addresses should be allowed to use this listener. Default is open/everyone.",
      "Type": "String",
      "Default": "0.0.0.0/0"
    }
  },
  "Mappings": {
    "ProxylityConfig": {
      "Fn::Transform": {
        "Name": "AWS::Include",
        "Parameters": {
          "Location": {
            "Fn::Sub": "s3://proxylity-config-${AWS::Region}/${AWS::AccountId}/customer-config.json"
          }
        }
      }
    }
  },
  "Resources": {
    "ProxylityRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::FindInMap": [
                    "ProxylityConfig",
                    {
                      "Ref": "AWS::Region"
                    },
                    "ServiceRole"
                  ]
                }
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "AllowLambdaInvoke",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "Lambda",
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:lambda:*:${AWS::AccountId}:function:dns-filter"
                    },
                    {
                      "Fn::Sub": "arn:aws:lambda:*:${AWS::AccountId}:function:dns-filter:*"
                    }
                  ]
                },
                {
                  "Sid": "AllowPutMetricData",
                  "Effect": "Allow",
                  "Action": [
                    "cloudwatch:PutMetricData"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "DnsListener": {
      "Type": "Custom::ProxylityUdpGatewayListener",
      "Properties": {
        "ServiceToken": {
          "Fn::FindInMap": [
            "ProxylityConfig",
            {
              "Ref": "AWS::Region"
            },
            "ServiceToken"
          ]
        },
        "ApiKey": {
          "Fn::FindInMap": [
            "ProxylityConfig",
            "Account",
            "ApiKey"
          ]
        },
        "Protocols": [
          "udp"
        ],
        "ClientRestrictions": {
          "Networks": [
            {
              "Ref": "ClientCidrToAllow"
            }
          ]
        },
        "Destinations": [
          {
            "Description": "Handles DNS queries, filtering blocked and redirected domains.",
            "Role": {
              "Arn": {
                "Fn::GetAtt": [
                  "ProxylityRole",
                  "Arn"
                ]
              }
            },
            "Batching": {
              "Count": 100,
              "TimeoutInSeconds": 0.1
            },
            "MetricsEnabled": true,
            "DestinationArn": {
              "us-west-2": {
                "Fn::Sub": "arn:aws:lambda:us-west-2:${AWS::AccountId}:function:dns-filter"
              },
              "us-east-1": {
                "Fn::Sub": "arn:aws:lambda:us-east-1:${AWS::AccountId}:function:dns-filter"
              },
              "eu-west-1": {
                "Fn::Sub": "arn:aws:lambda:eu-west-1:${AWS::AccountId}:function:dns-filter"
              }
            }
          }
        ]
      }
    },
    "DnsHandlerLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "DnsFilterLambdaPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "AllowDdbCrud",
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:GetItem",
                    "dynamodb:BatchGetItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:Query"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:dynamodb:us-west-2:${AWS::AccountId}:table/${Table}"
                    },
                    {
                      "Fn::Sub": "arn:aws:dynamodb:us-east-1:${AWS::AccountId}:table/${Table}"
                    },
                    {
                      "Fn::Sub": "arn:aws:dynamodb:eu-west-1:${AWS::AccountId}:table/${Table}"
                    },
                    {
                      "Fn::Sub": "arn:aws:dynamodb:us-west-2:${AWS::AccountId}:table/${Table}/index/*"
                    },
                    {
                      "Fn::Sub": "arn:aws:dynamodb:us-east-1:${AWS::AccountId}:table/${Table}/index/*"
                    },
                    {
                      "Fn::Sub": "arn:aws:dynamodb:eu-west-1:${AWS::AccountId}:table/${Table}/index/*"
                    }
                  ]
                },
                {
                  "Sid": "AllowLambdaLogging",
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "AnalysisLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["lambda.amazonaws.com"]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "AnalysisLambdaBasePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "AllowDdbWrite",
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:GetItem",
                    "dynamodb:UpdateItem"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:dynamodb:us-west-2:${AWS::AccountId}:table/${Table}"
                    },
                    {
                      "Fn::Sub": "arn:aws:dynamodb:us-east-1:${AWS::AccountId}:table/${Table}"
                    },
                    {
                      "Fn::Sub": "arn:aws:dynamodb:eu-west-1:${AWS::AccountId}:table/${Table}"
                    }
                  ]
                },
                {
                  "Sid": "AllowEventBridge",
                  "Effect": "Allow",
                  "Action": [
                    "events:PutEvents"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:events:*:${AWS::AccountId}:event-bus/default"
                  }
                },
                {
                  "Sid": "AllowLambdaLogging",
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "AsnDataLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["lambda.amazonaws.com"]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "AsnDataLambdaBasePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "AllowDdbQuery",
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Query"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:dynamodb:us-west-2:${AWS::AccountId}:table/${Table}"
                    },
                    {
                      "Fn::Sub": "arn:aws:dynamodb:us-east-1:${AWS::AccountId}:table/${Table}"
                    },
                    {
                      "Fn::Sub": "arn:aws:dynamodb:eu-west-1:${AWS::AccountId}:table/${Table}"
                    },
                    {
                      "Fn::Sub": "arn:aws:dynamodb:us-west-2:${AWS::AccountId}:table/${Table}/index/GSI1"
                    },
                    {
                      "Fn::Sub": "arn:aws:dynamodb:us-east-1:${AWS::AccountId}:table/${Table}/index/GSI1"
                    },
                    {
                      "Fn::Sub": "arn:aws:dynamodb:eu-west-1:${AWS::AccountId}:table/${Table}/index/GSI1"
                    }
                  ]
                },
                {
                  "Sid": "AllowLambdaLogging",
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "ApiAdapterLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["lambda.amazonaws.com"]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "ApiAdapterLambdaBasePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "AllowLambdaLogging",
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "FirehoseRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["firehose.amazonaws.com"]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    "Table": {
      "Type": "AWS::DynamoDB::GlobalTable",
      "Properties": {
        "BillingMode": "PAY_PER_REQUEST",
        "TimeToLiveSpecification": {
          "AttributeName": "TTL",
          "Enabled": true
        },
        "AttributeDefinitions": [
          {
            "AttributeName": "PK",
            "AttributeType": "S"
          },
          {
            "AttributeName": "SK",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "PK",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "SK",
            "KeyType": "RANGE"
          }
        ],
        "Replicas": [
          {
            "Region": "us-west-2",
            "PointInTimeRecoverySpecification": {
              "PointInTimeRecoveryEnabled": true
            }
          },
          {
            "Region": "eu-west-1",
            "PointInTimeRecoverySpecification": {
              "PointInTimeRecoveryEnabled": true
            }
          },
          {
            "Region": "us-east-1",
            "PointInTimeRecoverySpecification": {
              "PointInTimeRecoveryEnabled": true
            }
          }
        ],
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES"
        }
      }
    }
  },
  "Outputs": {
    "TableName": {
      "Description": "Name of the DynamoDB table holding DNS filter data",
      "Value": {
        "Ref": "Table"
      }
    },
    "DnsHandlerLambdaRoleArn": {
      "Description": "ARN of the IAM role to use with the DNS filter Lambda function",
      "Value": {
        "Fn::GetAtt": ["DnsHandlerLambdaRole", "Arn"]
      }
    },
    "AnalysisLambdaRoleArn": {
      "Description": "ARN of the IAM role to use with the DNS analysis Lambda function",
      "Value": {
        "Fn::GetAtt": ["AnalysisLambdaRole", "Arn"]
      }
    },
    "ApiAdapterLambdaRoleArn": {
      "Description": "ARN of the IAM role to use with the API adapter Lambda function",
      "Value": {
        "Fn::GetAtt": ["ApiAdapterLambdaRole", "Arn"]
      }
    },
    "AsnDataLambdaRoleArn": {
      "Description": "ARN of the IAM role to use with the ASN data Lambda function",
      "Value": {
        "Fn::GetAtt": ["AsnDataLambdaRole", "Arn"]
      }
    },
    "FirehoseRoleArn": {
      "Description": "ARN of the IAM role to use with Kinesis Firehose",
      "Value": {
        "Fn::GetAtt": ["FirehoseRole", "Arn"]
      }
    },
    "Domain": {
      "Value": {
        "Fn::Sub": "${DnsListener.Domain}.proxylity.com"
      }
    },
    "Port": {
      "Value": {
        "Fn::GetAtt": ["DnsListener", "Port"]
      }
    },
    "Endpoint": {
      "Value": {
        "Fn::Sub": "${DnsListener.Domain}.proxylity.com:${DnsListener.Port}"
      }
    }
  }
}